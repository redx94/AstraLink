version: '3.8'

services:
  # AstraLink API service
  astralink_api:
    build:
      context: .
      dockerfile: Dockerfile
    image: astralink/api:latest
    restart: unless-stopped
    environment:
      # Environment variables for AstraLink API
      - NODE_ENV=production
      - LOG_LEVEL=info
      - QUANTUM_SYSTEM_ENABLED=true
      - HA_ENABLED=true
      - METRICS_ENABLED=true
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - API_KEY=${API_KEY}
    ports:
      - "8000:8000"
    volumes:
      - ./config:/app/config
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Quantum System service
  quantum_system:
    build:
      context: .
      dockerfile: Dockerfile.quantum
    image: astralink/quantum:latest
    restart: unless-stopped
    environment:
      - QUANTUM_LOG_LEVEL=info
      - QUANTUM_ERROR_CORRECTION=enabled
    ports:
      - "9000:9000"
    volumes:
      - quantum_keys:/app/quantum/keys
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      replicas: 2
      update_config:
        parallelism: 1
        delay: 10s
      resources:
        limits:
          cpus: '2'
          memory: 4G
        reservations:
          cpus: '1'
          memory: 2G

  prometheus:
    image: prom/prometheus:latest
    container_name: astralink_prometheus
    volumes:
      - ./monitoring/prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - "9090:9090"
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: astralink_grafana
    volumes:
      - ./monitoring/grafana:/etc/grafana/provisioning
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    restart: unless-stopped

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: astralink_elasticsearch
    environment:
      - node.name=astralink_es01
      - cluster.name=astralink-es-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    restart: unless-stopped

  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: astralink_kibana
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: astralink_redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  handshake-node:
    image: handshakeorg/hsd:latest
    container_name: astralink-hsd
    ports:
      - "12037:12037"  # HSD HTTP API
      - "12038:12038"  # HSD Wallet API
      - "53:53/udp"    # DNS
    volumes:
      - ./data/hsd:/root/.hsd
    command: >
      --http-host=0.0.0.0
      --api-key=${HSD_API_KEY:-astralink_default_key}
      --network=mainnet
      --port=12038
      --http-port=12037
      --rs-host=0.0.0.0
      --rs-port=53
    environment:
      - HSD_API_KEY=${HSD_API_KEY:-astralink_default_key}
    restart: unless-stopped

volumes:
  prometheus_data:
  grafana_data:
  elasticsearch_data:
  redis_data:
  quantum_keys:
  hsd_data:

networks:
  default:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16
